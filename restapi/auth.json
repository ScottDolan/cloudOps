{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "Jobs 1 CloudFormation Template",
    "Parameters": {
      "CompanyName": {
        "Description": "Company Name",
        "Type": "String",
        "Default": "generic"
      },
      "DepartmentName": {
        "Description": "Department Name",
        "Type": "String",
        "Default": "cloudops"
      },
      "ProjectName": {
        "Description": "Project Name",
        "Type": "String",
        "Default": "auth"
      },
      "EnvironmentName": {
        "Description": "Environment Name",
        "Type": "String",
        "Default": "prod",
        "AllowedValues": [
          "lab",
          "dev",
          "uat",
          "prod"
        ]
      },
      "OwnerEmail": {
        "Default": "sdolan@jernie.com",
        "Description": "Owner Email - The address to notify if there are any operational issues related to the Application",
        "Type": "String",
        "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
        "ConstraintDescription": "must be a valid email address."
      },
      "Version": {
        "Default": "1.0.0",
        "Type": "String",
        "Description": "Version"
      }
    },
    "Mappings": {
      "Environments": {
        "lab": {
          "Env": "lab"
        },
        "dev": {
          "Env": "dev"
        },
        "uat": {
          "Env": "uat"
        },
        "prod": {
          "Env": "prod"
        }
      }
    },
    "Resources": {
      "LambdaExecutionRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "lambda.amazonaws.com",
                    "ec2.amazonaws.com",
                    "cloudwatch.amazonaws.com",
                    "apigateway.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "root",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "logs:CreateLogGroup",
                      "logs:DescribeLogStreams",
                      "logs:PutRetentionPolicy",
                      "logs:CreateLogStream",
                      "logs:PutLogEvents",
                      "logs:GetLogEvents"
                    ],
                    "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "ec2:*"
                    ],
                    "Resource": "*"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "lambda:InvokeFunction"
                    ],
                    "Resource": "arn:aws:execute-api:*:*:*/*/*/"
                  }
                ]
              }
            }
          ]
        }
      },
      "Lambda": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "FunctionName": "Authorier",
          "Description": "Generic RestAPI EndPoint Authorizer",
          "Runtime": "python2.7",
          "Timeout": 3,
          "MemorySize": 128,
          "PackageType": "Zip",
          "Code": {
            "S3Bucket": "code.devops",
            "S3Key": "main.zip"
          },
          "Handler": "main.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "LambdaExecutionRole",
              "Arn"
            ]
          },
          "VpcConfig": {
            "SecurityGroupIds": [
              "sg-07e3d1a702b1b2dcb"
            ],
            "SubnetIds": [
              {
                "Fn::ImportValue": {
                  "Fn::Sub": "${CompanyName}-infrastructure-${EnvironmentName}-SubnetPublicId-1A"
                }
              },
              {
                "Fn::ImportValue": {
                  "Fn::Sub": "${CompanyName}-infrastructure-${EnvironmentName}-SubnetPublicId-1B"
                }
              }
            ]
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Sub": "subnet-public-1a-${EnvironmentName}"
              }
            },
            {
              "Key": "Company",
              "Value": {
                "Fn::Sub": "${CompanyName}"
              }
            },
            {
              "Key": "Project",
              "Value": {
                "Fn::Sub": "${ProjectName}"
              }
            },
            {
              "Key": "Environment",
              "Value": {
                "Fn::Sub": "${EnvironmentName}"
              }
            },
            {
              "Key": "Owner",
              "Value": {
                "Fn::Sub": "${OwnerEmail}"
              }
            }
          ]
        }
      },
      "ApiGatewayRoute": {
        "Type": "AWS::ApiGatewayV2::Route",
        "Properties": {
          "ApiId": {
            "Ref": "ApiGateway"
          },
          "AuthorizationType": "NONE",
          "OperationName": "ANY",
          "RouteKey": "ANY /",
          "Target": {
            "Fn::Join": [
              "/",
              [
                "integrations",
                {
                  "Ref": "MyIntegration"
                }
              ]
            ]
          }
        }
      },
      "MyIntegration": {
        "Type": "AWS::ApiGatewayV2::Integration",
        "Properties": {
          "ApiId": {
            "Ref": "ApiGateway"
          },
          "Description": "Lambda Integration",
          "IntegrationType": "AWS_PROXY",
          "IntegrationUri": {
            "Fn::GetAtt": [
              "Lambda",
              "Arn"
            ]
          },
          "IntegrationMethod": "ANY",
          "ConnectionType": "INTERNET",
          "PayloadFormatVersion": "2.0",
          "TimeoutInMillis": 29000
        }
      }
    },
    "Outputs": {
      "ApiGatewayV2": {
        "Description": "The ApiGatewayV2 ID",
        "Value": {
          "Ref": "ApiGateway"
        },
        "Export": {
          "Name": {
            "Fn::Sub": "${ProjectName}-${AWS::StackName}-ApiGatewayV2-Id"
          }
        }
      },
      "RouteTableArn": {
        "Description": "Lambda Arn",
        "Value": {
          "Fn::GetAtt": [
            "Lambda",
            "Arn"
          ]
        }
      }
    }
  }